#!/sbin/sh

#Functions
ui_print() {
  $BOOTMODE && echo "$1" || echo -e "ui_print $1\nui_print" >> /proc/self/fd/$OUTFD
}

#Setup
INSTALLER=/dev/tmp/install
rm -rf /dev/tmp 2>/dev/null
mkdir -p $INSTALLER
unzip -o "$3" -d $INSTALLER 2>/dev/null

OUTFD=$2
readlink /proc/$$/fd/$OUTFD 2>/dev/null | grep /tmp >/dev/null
if [ "$?" -eq "0" ]; then
  OUTFD=0
  for FD in `ls /proc/$$/fd`; do
    readlink /proc/$$/fd/$FD 2>/dev/null | grep pipe >/dev/null
    if [ "$?" -eq "0" ]; then
      ps | grep " 3 $FD " | grep -v grep >/dev/null
      if [ "$?" -eq "0" ]; then
        OUTFD=$FD
        break
      fi
    fi
  done
fi

#Preliminary Bootmode Detection
ps | grep zygote | grep -qv grep >/dev/null && BOOTMODE=true || BOOTMODE=false
$BOOTMODE || ps -A 2>/dev/null | grep zygote | grep -qv grep >/dev/null && BOOTMODE=true

#Busybox Setup
ABI=`getprop ro.product.cpu.abi`
case $ABI in
  arm*) ABI=arm;;
  x86*) ABI=x86;;
  mips*) ABI=mips;;
  *) ui_print "Unknown architecture: $ABI!"; exit 1;;
esac
BBBIN=$INSTALLER/bin/busybox
mkdir -p $INSTALLER/bin 2>/dev/null
cp -f $INSTALLER/Busybox/busybox-$ABI $BBBIN 2>/dev/null
chmod 755 $BBBIN
$BBBIN --install -s $INSTALLER/bin
export PATH=$INSTALLER/bin:$PATH
ps -A | grep zygote | grep -qv grep && BOOTMODE=true || BOOTMODE=false

# Main
ui_print " "
ui_print "    *******************************************"
ui_print "    * ViPER4AndroidFX v2.7+ Profile Converter *"
ui_print "    *******************************************"
ui_print "    *              by: Zackptg5               *"
ui_print "    *******************************************"
ui_print " "

# Find ViPER4Android profiles folder
if $BOOTMODE; then
  FOL=/storage/emulated/0/ViPER4Android
  [ -d $FOL ] || FOL=$(find /storage -type d -name "ViPER4Android" 2>/dev/null | head -n1)
  [ -d $FOL ] || FOL=$(find /data/media -type d -name "ViPER4Android" 2>/dev/null | head -n1)
  [ -d $FOL ] || FOL=$(find /sdcard -type d -name "ViPER4Android" 2>/dev/null | head -n1)
else
  FOL=/data/media/0/ViPER4Android
  [ -d $FOL ] || FOL=$(find /data/media -type d -name "ViPER4Android" 2>/dev/null | head -n1)
fi
[ -d $FOL ] || { ui_print "ViPER4Android folder not found! Aborting!"; exit 1; }
ui_print "- ViPER4Android folder detected at: $FOL!"
ui_print " "
[ "$(ls -A $FOL/Profile 2>/dev/null)" ] || { ui_print "No profiles detected!"; exit 1; }
mkdir $FOL/Preset 2>/dev/null
. $INSTALLER/Keys.sh

find $FOL/Profile -mindepth 1 -maxdepth 1 -type d 2>/dev/null | while read PROFILE; do
  ui_print "- Converting $(basename "$PROFILE")"
  for DEVICE in bluetooth headset speaker usb; do
    case $DEVICE in
      bluetooth) DEST="$FOL/Preset/$(basename "$PROFILE")-$DEVICE/bt_a2dp.xml";;
      headset) DEST="$FOL/Preset/$(basename "$PROFILE")-$DEVICE/headset.xml";;
      speaker) DEST="$FOL/Preset/$(basename "$PROFILE")-$DEVICE/speaker.xml";;
      usb) DEST="$FOL/Preset/$(basename "$PROFILE")-$DEVICE/usb_device.xml";;
    esac
    for FORMAT in txt xml; do
      if [ "$FORMAT" == "xml" ]; then
        SOURCE="$PROFILE/com.vipercn.viper4android_v2.$DEVICE.xml"
        DEST="$(echo "$DEST" | sed "s|-$DEVICE|-$DEVICE-Legacy|")"
      else
        SOURCE="$PROFILE/$DEVICE.txt"
      fi
      [ -f "$SOURCE" ] || continue
      [ -d "$(dirname "$DEST")" ] && { ui_print "   New preset $(basename $(dirname "$DEST")) already exists!"; ui_print "   Backing up to: $(basename $(dirname "$DEST"))-old"; ui_print "    if it doesn't already exist (won't be overwritten)"; mv -n "$(dirname "$DEST")" "$(dirname "$DEST")-old"; }
      [ "$FORMAT" == "xml" ] && ui_print "   Creating new $DEVICE-legacy profile..." || ui_print "   Creating new $DEVICE profile..."
      mkdir "$(dirname "$DEST")" 2>/dev/null
      cp -f $INSTALLER/Blanks/$(basename "$DEST") "$DEST"
      while read LINE; do
        [ "$(echo "$LINE" | grep 'ddcblock')" ] && continue # Skip ddcblock lines - not used and just slow down script
        if [ "$FORMAT" == "xml" ]; then
          case "$LINE" in
            *"string name="*) VALUE="$(echo "$LINE" | sed -r -e "s|.*>(.*)</.*|\1|" -e "s/FILE://")"; LINE="$(echo "$LINE" | sed -r -e "s|.*name=\"viper4android.[A-Za-z]*\.(.*)\".*|\1|" -e "s/viperddc/ddc/" -e "s/\./_/g")";;
            *"boolean name="*) VALUE="$(echo "$LINE" | sed -r "s|.*value=\"(.*)\" />.*|\1|")"; LINE="$(echo "$LINE" | sed -r -e "s|.*name=\"viper4android.[A-Za-z]*\.(.*)\" v.*|\1|" -e "s/viperddc/ddc/" -e "s/\./_/g")";;
            *) continue;;
          esac
          # Change speaker entry names
          [ "$DEVICE" == "speaker" ]&& { case "$LINE" in
                                           convolver*|fet*|fireq*|limiter|outvol|playback*|reverb*) LINE="speaker_$LINE";;
                                         esac; }
          [ "$LINE" == "dynamicsystem_bass" ] && VALUE=$((VALUE * 20 + 100))
        else
          case "$LINE" in
            [A-Z-a-z.]*) VALUE="$(echo "$LINE" | sed -e "s|^.*=||" -e "s/FILE://")"; LINE="$(echo "$LINE" | sed -e "s|=.*$||" -e "s/viperddc/ddc/" -e "s/\./_/g")";;
            *) continue;;
          esac
          # Change speaker entry names
          [ "$DEVICE" == "speaker" -a "$LINE" == "speaker_enable" ] && LINE=enable
        fi
        # Change names
        case "$LINE" in
          *fireq) continue;;
          *fireq_custom) LINE=fireq;;
          dynamicsystem_coeffs) LINE=dynamicsystem_device;;
          dynamicsystem_bass) LINE=dynamicsystem_strength;;
          tube_enable) LINE=tube_simulator_enable;;
          channelpan) LINE=gate_channelpan;;
          *limiter) LINE=gate_limiter;;
          *outvol) LINE=gate_outputvolume;;
          *reverb*) LINE="$(echo $LINE | sed -e "s/reverb_/reverberation_/" -e "s/roomwidth/room_width/")";;
          *fetcompressor*) LINE="$(echo $LINE | sed "s|fetcompressor_|fet_|")";;
          vhs_qual) LINE=vhs_quality;;
          fidelity_bass_freq) LINE=fidelity_bass_frequency;;
          spkopt_enable|speaker_optimize) LINE=speaker_optimization;;
        esac
        case "$LINE" in
          fidelity_bass_mode|fidelity_clarity_mode|ddc_device|*fireq|*convolver_kernel|dynamicsystem_device)
            VALUE="$(basename "$VALUE")"
            [ "$LINE" == "ddc_device" -o "$LINE" == "convolver_kernel" ] && [ "$VALUE" ] && [ $VALUE -eq $VALUE ] 2>/dev/null && VALUE="$(grep "$VALUE" $INSTALLER/VDCIndex.txt | sed -r "s/^[0-9]*=\"(.*)\"/\1/").vdc"
            LINE="$(eval echo \$$LINE)"
            sed -i "/$LINE/ s|>.*</string>|>$VALUE</string>|" "$DEST";;
          *) LINE="$(eval echo \$$LINE)"
             if [ -z $LINE ]; then
               continue
             else  
               #Convert to integer
               case "$VALUE" in
                 [0-9]*.[0-9]*) VALUE=$(awk -v VALUE=$VALUE 'BEGIN{VALUE=(VALUE*100); print VALUE;}');;
                 [0-9]*\;7600) VALUE="$(echo $VALUE | sed "s/;.*//")"; VALUE=$(awk -v VALUE=$VALUE 'BEGIN{VALUE=(VALUE/5.6); print VALUE;}');; #vse_value
                 [0-9]*\;[0-9]*) VALUE="$(echo $VALUE | sed "s/;.*//")";; #colorfulmusic_coeffs
               esac
               sed -i "/$LINE/ s|value=\".*\"|value=\"$VALUE\"|" "$DEST"
             fi;;
        esac
      done < "$SOURCE"
    done
  done
done

ui_print " "
ui_print "- Conversion Completed! Enjoy!"
ui_print " "

exit 0
